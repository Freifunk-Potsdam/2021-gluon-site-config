-- This is an example site configuration for Gluon v2021.1
--
-- Take a look at the documentation located at
-- https://gluon.readthedocs.io/ for details.
--
-- This configuration will not work as is. You're required to make
-- community specific changes to it!
{
  domain_names = {
    potsdam_umland = 'Potsdam Umland'
  },

  -- 32 bytes of random data, encoded in hexadecimal
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = '6f7d40ea896f9b5e85a061ff7d8605dc66d19d63753a17c5ae9086307e006997',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.22.16.0/22',
  prefix6 = 'fdc0:ffee:a10:10::/64',
  extra_prefixes6 = {'2001:470:7042:10::/64'},

  wifi = {
    mesh = {
        sae = true,
        -- sae_passphrase = "<shared secret>",
    },
  },

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSIDs used for client network.
    ap = {
      ssid = 'gluon.freifunk-potsdam.de', -- (optional - SSID for open client network)
      -- disabled = true, -- (optional)

      -- Configuration for a backward compatible OWE network below.
      owe_ssid = 'owe.freifunk-potsdam.de', -- (optional - SSID for OWE client network)
      owe_transition_mode = false, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },

    mesh = {
      -- Adjust these values!
      id = 'ffp-mesh2-16',
      mcast_rate = 12000,
      -- disabled = true, -- (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    outdoor_chanlist = '100-140',
    ap = {
      ssid = 'gluon5.freifunk-potsdam.de',
      owe_ssid = 'owe5.freifunk-potsdam.de', -- (optional - SSID for OWE client network)
      owe_transition_mode = false, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },
    mesh = {
      -- Adjust these values!
      id = 'ffp-mesh5-16',
      mcast_rate = 12000,
    },
  },

  mesh = {
    vxlan = true,
    batman_adv = {
      routing_algo = 'BATMAN_IV',
      gw_sel_class = 1500,
    },
  },

  -- Use internal resolver
  dns = {
    cacheentries = 500,
    servers = {
      'fdc0:ffee:a10:10:0:1::',   -- gw1 (chapek-9)
      'fdc0:ffee:a10:10:0:2::',   -- gw2
      'fdc0:ffee:a10:10:0:3::',   -- gw3
      -- '2001:470:20::2',           -- fallback he.net caching DNS
      -- '2620:fe::fe',              -- fallback quad9 (1)
      -- '2620:fe::9',               -- fallback quad9 (2)
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    name = { 'nextnode.ffp', 'nn.ffp' },
    ip4 = '10.22.16.255',
    ip6 = 'fdc0:ffee:0a10:10::ffff',
  },

  mesh_vpn = {
    -- enabled = true,
    mtu = 1396,

    fastd = {
      -- Refer to https://fastd.readthedocs.io/en/latest/ to better understand
      -- what these options do.
      mtu = 1396,

      -- List of crypto-methods to use.
      methods = {'null@l2tp'},
      -- configurable = true,
      -- syslog_level = 'debug',

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,

          -- List of peers.
          peers = {
            peer1 = {
              key = '980edaaa1244f9b148b24a63be62db92877811694d37bd80980ce09414a8b3d5',

              -- This is a list, so you might add multiple entries.
              remotes = {
                'ipv4 "gw1.freifunk-potsdam.de" port 10016',
                'ipv6 "gw1.freifunk-potsdam.de" port 10016',
              },
            },
            peer2 = {
              key = 'd713cf13a57af8a5bc8ed0595b51137c437577f504466bdb65f90ba70a7900c5',

              -- This is a list, so you might add multiple entries.
              remotes = {
                'ipv4 "gw2.freifunk-potsdam.de" port 10016',
                'ipv6 "gw2.freifunk-potsdam.de" port 10016',
              },
            },
            peer3 = {
              key = '27a103771e89ecc1d8c01ae1bd3522d44673cd13bfb6ecc08ef36c56c7de0406',

              -- This is a list, so you might add multiple entries.
              remotes = {
                'ipv4 "gw3.freifunk-potsdam.de" port 10016',
                'ipv6 "gw3.freifunk-potsdam.de" port 10016',
              },
            },
          },
        },
      },
    },

    -- tunneldigger = {
    --  brokers = {'vpn-gluon.freifunk-potsdam.de:8942'},
    --  mtu = 1312,
    -- },
  },
}
