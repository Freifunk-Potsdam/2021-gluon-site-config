-- Site configuration for domain "Potsdam".
--
-- Take a look at the documentation located at
-- https://gluon.readthedocs.io/ for details.
{
  domain_names = {
    potsdam = 'Potsdam'
  },

  -- 32 bytes of random data, encoded in hexadecimal
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = '64eaf19eed12e35e4de145c80c268232b42a93f4bb9e244a7b5b0ec3fb8ab20c',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.22.0.0/20',
  prefix6 = 'fdc0:ffee:0a10::/64',
  extra_prefixes6 = {
    '2001:470:7042::/64',
  },

  wifi = {
    mesh = {
      sae = true,
      -- sae_passphrase = "<shared secret>",
    },
  },

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSIDs used for client network.
    ap = {
      ssid = 'freifunk-potsdam.de', -- (optional - SSID for open client network)
      -- disabled = true, -- (optional)

      -- Configuration for a backward compatible OWE network below.
      owe_ssid = 'owe.freifunk-potsdam.de', -- (optional - SSID for OWE client network)
      owe_transition_mode = false, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },

    mesh = {
      -- Adjust these values!
      id = 'ffp-mesh2-0',
      mcast_rate = 12000,
      -- disabled = true, -- (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    outdoor_chanlist = '100-140',
    ap = {
      ssid = 'freifunk-potsdam.de',
      owe_ssid = 'owe.freifunk-potsdam.de', -- (optional - SSID for OWE client network)
      owe_transition_mode = false, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },
    mesh = {
      -- Adjust these values!
      id = 'ffp-mesh5-0',
      mcast_rate = 12000,
    },
  },

  mesh = {
    vxlan = true,
    batman_adv = {
      routing_algo = 'BATMAN_IV',
      gw_sel_class = 1500,
    },
  },

  -- Use internal resolver
  dns = {
    cacheentries = 15000,
    servers = {
      'fdc0:ffee:a10::1:0:0',   -- gw1 (chapek-9)
      'fdc0:ffee:a10::2:0:0',   -- gw2
      'fdc0:ffee:a10::3:0:0',   -- gw3
      -- '2001:470:20::2',         -- fallback he.net caching DNS
      -- '2620:fe::fe',            -- fallback quad9 (1)
      -- '2620:fe::9',             -- fallback quad9 (2)
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    name = { 'nextnode.ffp', 'nn.ffp' },
    ip4 = '10.22.0.255',
    ip6 = 'fdc0:ffee:0a10::ffff',
  },

  mesh_vpn = {
    -- enabled = true,
    mtu = 1396,

    fastd = {
      -- Refer to https://fastd.readthedocs.io/en/latest/ to better understand
      -- what these options do.
      mtu = 1396,

      -- List of crypto-methods to use.
      methods = {'null@l2tp'},
      -- configurable = true,
      -- syslog_level = 'debug',

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,

          -- List of peers.
          peers = {
            peer1 = {
              key = '49a1b06d962c774fd4d64aeb2893650a5f5824cd3c195fe9d083eaec6db0e6bc',

              -- This is a list, so you might add multiple entries.
              remotes = {
                'ipv4 "gw1.freifunk-potsdam.de" port 10000',
                'ipv6 "gw1.freifunk-potsdam.de" port 10000',
              },
            },
            peer2 = {
              key = '8250baa2c3f8a37f3ceb0f23186bfdde1893ac8594e523eb6fa42d5020881f49',

              -- This is a list, so you might add multiple entries.
              remotes = {
                'ipv4 "gw2.freifunk-potsdam.de" port 10000',
                'ipv6 "gw2.freifunk-potsdam.de" port 10000',
              },
            },
            peer3 = {
              key = 'b44403a2bad715a615443e3397b13fa4bbc1aa535cb18685b50edc099aaa4c10',

              -- This is a list, so you might add multiple entries.
              remotes = {
                'ipv4 "gw3.freifunk-potsdam.de" port 10000',
                'ipv6 "gw3.freifunk-potsdam.de" port 10000',
              },
            },
          },
        },
      },
    },

    -- tunneldigger = {
    --  brokers = {'vpn-gluon.freifunk-potsdam.de:8942'},
    --  mtu = 1312,
    -- },
  },
}
