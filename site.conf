-- This is an example site configuration for Gluon v2021.1
--
-- Take a look at the documentation located at
-- https://gluon.readthedocs.io/ for details.
--
-- This configuration will not work as is. You're required to make
-- community specific changes to it!
{
  authorized_keys = {
    'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfWvM4IVLYeL0UcPD5X1FPMhSuIzQlKlBEbziZjI6HgS+uucCM5LTSPC18TQHtKdz/QJ2QGZpX9yHgBWWQpwbzmAo1a/FLHZfKl5MdIfD3MXHWJgWUPd5ZwK2Aa1MAdEfNLgRQJFlASEQOy9U2EXXyuh/ymb4/AJGO+drn70nvkZxcLYrx+7Kar2gaeeAqamq8WyELAHOaoODUiodwupyJC2kPqywggnZQEGgyuCYhccWoED8fHcDJJCH3PTRTnayn8ecoD2dZvnktiGQgJklKjSYzfsEEoZX/OCGUJcgjfUfcUVyt7fRahAyCq0YZtING4zoVhQP2VgYqKc66A3T9 seth0r@vesta',
    'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDCX+AwbSfr97XNUwwfqYYO2S4gKZMI8CAB5bzuz/XGHIBd9oJfvwmsDNx5B9Vwo9BKDHIi1HZTOY5uIZDcX+tQhOoO8S9G07i/oETByfPu0OTT0xG/2i+qvDihS/hOyIc8dtzwt+IatrvI0BCEgNskY22bD9hSUNFluLACH1oxDsVg5i/3yVAAxLok+BtPzm5qWV+VfmcKUrf7lo5U9EkYPkTeRGQPKUQ9Xr7g3fghuQd9rg+9ejbtVkSXR6bLbPsjcC3F1SJUZghve3w6Ftd4LsjJEw9wQh9NDKKmnnCvDpIZSgAr8LtLidNSz4jseJ1cqAiuPxbG6GJZxqxT4r0VWnAc+PRlsi7E+NvUTPXQrYExhJ1OQSunmFAg5XD4cEE36CsU3J4cI+ghrehvUyJVn45e8WQkjiyTJtRyLa5VX50ie2xBPZecz9TuQevnEzojIjoDPyarDo62VKFZai76UldddHR+2I/8IcSrqWG1lRn2PITy0jsU/qd+kRDVDNzR1zQCEg/D4tA7cvtqA8Bu+y68PZAIZGZ4maTjewi//TRrtgGjdsPoGPqkLU/TZl7DtHBoh1TJ5jZcncbuyRLl/WSma+0Pot/Yg/SuRNPyjAhd0TSJO1W76j5yJb2n5Lt+8VwdPhyyU3r/SdaTnv3KcHnU5SnM4snp1k+slmic9w== carsi@t420',
    'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCZ+EIiDjfqMhqG+TBgQRXb4Zg6L1W+QcqQ4+/WyD/M06E3kGMrpTGQwH3usfh4WMFZXy3xDgGQOigl+N9q6y3HbB1hPDzEPUSpWna9RLCMoKV9v86iYWxbSxLql23bfSe2j74JboLNS2wN0yQMnak15lPy99VknYTd5nYTOJtuFtEDpnlkD3MJoj6LxhAyZMgQx/rTFNIXhVi2HA8NyT96zAmAenyBDuBsnyxJtzaQAaf56okEAH8jsIJCstILibTudfNtIkPZxtk0myIGRfPJlvYjA/Su+T7cRTEZ3SGf14a3mDhkGUOkrtDva/A6Z0hfCyPuTXNvmubhif8kuq17MwjXuc3UfEaMndfVuMo0ejoi2QcETsIlE4Q+rhqt4oZits6TnGGkMU81xObIg3brej+mCTT0Yug80K0p2DjoTW4yyNSzsx0s4a7tGfCiHEGJ0u1G4aFUfKApQ2XEzWUMisWsEY3MRNT/46gMZTMScVkjS1GqG1YHP7hhzqO40lTZKW7ARw7jDJc3K+uHfYEe0raD+nxKGFoov0dSrqI8mqSZ2eiYadmaPIsaxb/GzIowuwdvazAS2sSac55ah0j9Y8Pqvdwb9rLo+VOTeXe1b3iLd25jk5wm5HpnQ/n1U2rxukmc86H20zKXUQBmOb24LHB1l0Eqm93phqsDD29fkw== hannes@X570-A-JC17049246',
    'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7leWYrsSB5ww+giuGqpaNkyQFp3Xb+IdEJvRp4mqKdO/ZX+lHNOy9G2HdxIqfptASMYv8M4MFfMzZCbb7/AtxbsMGzxwqMsDWDnNS1Ao2a69v/MgunZWF82j34KdvwVmRwVabsjPNQXN6+t6FQQ/510xRA0N+rINSk1u3EYKfpEpjsZw7FwyUZnGsmWgGoqqvncEszxQLYP0glKFLXWIgJ7So1XV6WTg4AbAiNXSC3tlmowNZ/NokkPjpxU7F1vYCma1l3uVaNKX9Dbyz0YNLUNBGHskjGQml4XVeJQmPuBSpLthaTMKudE704+Z6lRUmsgBj00zdQR1W/DhN15zRHl/gJ/7TBvuVf7xVxE9uJvRbZ5Y01kzU+ve7vEyIAhbnqF49lvjsxDrHIhUaR2nzUdU/tgwI/mlDKG1cVFDjkX0E+u5XTOw9eggLGYq69wrQjr7z1UkhKp/+kRAhW5NT0n1jg1i18P+0O4XyoO0jXd29MhxFxqfK6jt1BCqPZbCFP9I5+xHdNU+lwMoIpG4ghumjDOAbTojpCITuEtAuqVLzJMSnTYxqtHAt/PoWySH7/na/sic/fq22JwD+tnzmy8TXexvZHycTU0gmcMTBu68m/7hmJfmLjxSr4S/U1qp0zbGXhH+1FylKRoG1HbeK0xVMe9HjNH+KV67ybgCdKw== hannes@Swift1-SF114-32',
  },

  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'ffp-',

  config_mode = {
    hostname = {
      optional = false,
      prefill = true,
    },
    geo_location = {
      show_altitude = false,
      osm = {
        center = {
          lat = 52.3948361,
          lon = 13.0642644,
        },
        zoom = 14,
      },
    },
  },

  opkg = {
    openwrt = "http://downloads.openwrt.org/releases/%v/packages/%A",
    extra = {
      core = "http://firmware.freifunk-potsdam.de/feed/gluon/core/gluon-%GS-%GR/%S",
--      ffp_gluon = 'http://firmware.freifunk-potsdam.de/feed/gluon/ffp_gluon/gluon-%GS-%GR/%S',
    },
  },

  -- Name of the community.
  site_name = 'Freifunk Potsdam',

  -- Shorthand of the community.
  site_code = 'ffp',

  -- 32 bytes of random data, encoded in hexadecimal
  -- This data must be unique among all sites and domains!
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = '64eaf19eed12e35e4de145c80c268232b42a93f4bb9e244a7b5b0ec3fb8ab20c',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.22.0.0/22',
  prefix6 = 'fd28:a735:685c::/64',

  -- Timezone of your community.
  -- See https://openwrt.org/docs/guide-user/base-system/system_configuration#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'2.de.pool.ntp.org'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  wifi = {
    mesh = {
        sae = true,
        -- sae_passphrase = "<shared secret>",
    },
  },

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSIDs used for client network.
    ap = {
      ssid = 'gluon.freifunk-potsdam.de', -- (optional - SSID for open client network)
      -- disabled = true, -- (optional)

      -- Configuration for a backward compatible OWE network below.
      owe_ssid = 'owe.freifunk-potsdam.de', -- (optional - SSID for OWE client network)
      owe_transition_mode = false, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },

    mesh = {
      -- Adjust these values!
      id = 'mesh23', -- usually you don't want users to connect to this mesh-SSID, so use a cryptic id that no one will accidentally mistake for the client WiFi
      mcast_rate = 12000,
      -- disabled = true, -- (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    outdoor_chanlist = '100-140',
    ap = {
      ssid = 'gluon5.freifunk-potsdam.de',
      owe_ssid = 'owe5.freifunk-potsdam.de', -- (optional - SSID for OWE client network)
      owe_transition_mode = false, -- (optional - enables transition-mode - requires ssid as well as owe_ssid)
    },
    mesh = {
      -- Adjust these values!
      id = 'mesh42',
      mcast_rate = 12000,
    },
  },

  mesh = {
    vxlan = true,
    batman_adv = {
      routing_algo = 'BATMAN_IV',
      gw_sel_class = 1500,
    },
  },

  -- Set IPv6 DNS addresses (Quad9, Temporary)
  -- NOTE: Set to our DNS (ULA) later
  dns = {
    cacheentries = 500,
    servers = { '2620:fe::fe', '2620:fe::9', },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    name = { 'nextnode.freifunk-potsdam.de', 'nextnode', 'nn' },
    ip4 = '192.168.1.1',
    ip6 = 'fd28:a735:685c::1',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  mesh_vpn = {
    -- enabled = true,
    mtu = 1312,

    fastd = {
      -- Refer to https://fastd.readthedocs.io/en/latest/ to better understand
      -- what these options do.
      mtu = 1312,

      -- List of crypto-methods to use.
      methods = {'null@l2tp'},
      -- configurable = true,
      -- syslog_level = 'debug',

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,

          -- List of peers.
          peers = {
            peer1 = {
              key = '49a1b06d962c774fd4d64aeb2893650a5f5824cd3c195fe9d083eaec6db0e6bc',

              -- This is a list, so you might add multiple entries.
              remotes = {
                'ipv4 "vpn-gluon.freifunk-potsdam.de" port 10090',
                -- 'ipv6 "cygnus-5.srv.0xef.de" port 10090'
              },
            },
          },
        },
      },
    },

    -- tunneldigger = {
    --  brokers = {'vpn-gluon.freifunk-potsdam.de:8942'},
    --  mtu = 1312,
    -- },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 2000,

      -- Default download limit (kbit/s).
      ingress = 10000,
    },
  },

  autoupdater = {
    -- Default branch (optional), can be overridden by setting GLUON_AUTOUPDATER_BRANCH when building.
    -- Set GLUON_AUTOUPDATER_ENABLED to enable the autoupdater by default for newly installed nodes.
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://firmware.freifunk-potsdam.de/gluon/stable/sysupgrade'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
          'd0d080ec28d66a248ee6deb025c98d5773700cc8ce2ae1a31e601a57c9193371', -- Seth0r
          'd0d080ec28d66a248ee6deb025c98d5773700cc8ce2ae1a31e601a57c9193371', -- Placeholder
        },
      },
      early = {
        name = 'early',
        mirrors = {'http://firmware.freifunk-potsdam.de/gluon/early/sysupgrade'},
        good_signatures = 2,
        pubkeys = {
          'd0d080ec28d66a248ee6deb025c98d5773700cc8ce2ae1a31e601a57c9193371', -- Seth0r
          'd0d080ec28d66a248ee6deb025c98d5773700cc8ce2ae1a31e601a57c9193371', -- Placeholder
        },
      },
      testing = {
        name = 'testing',
        mirrors = {'http://firmware.freifunk-potsdam.de/gluon/testing/sysupgrade'},
        good_signatures = 1,
        pubkeys = {
          'd0d080ec28d66a248ee6deb025c98d5773700cc8ce2ae1a31e601a57c9193371', -- Seth0r
          'd0d080ec28d66a248ee6deb025c98d5773700cc8ce2ae1a31e601a57c9193371', -- Placeholder
        },
      },
    },
  },
}
